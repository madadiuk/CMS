CMS
	/app
		/classes
			/controllers
				ErrorController.php
				IndexController.php
				UserController.php
				DeviceController.php
				EventController.php
			/framework
				ControllerAbstract.php
				DatabaseWrapper.php
				Factory.php
				ProcessOutput.php
				Router.php
				SqlQuery.php
				Validate.php
				WebPageTemplateView.php
			/models
				ErrorModel.php
				DeviceModel.php
				EventModel.php
				UserModel.php
			/views
				ErrorView.php
				IndexView.php	
		/public
			/css
				style.css
			/media
				/img
			index.php
		.env
		.htaccess
		autoload.php
		bootstrap.php
		settings.php
	/mysql
	/nginx
	/php
	/supervisord
	app.dockerfile
	docker-compose.yml
	README.md
	webserver.dockerfile

All of codes from a mcv project:

FROM nginx:latest
ADD ./nginx/conf.d/app.conf /etc/nginx/conf.d/default.conf

docker files:
version: '3.8'
services:
  # PHP Service
  cms-app:
    build:
      context: .
      dockerfile: app.dockerfile
    container_name: cms-app
    tty: true
    environment:
      SERVICE_NAME: cms-app
      SERVICE_TAGS: dev
    working_dir: /var/www/server
    env_file: './app/.env'
    volumes:
      - ./app:/var/www/server
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - cms-network
    depends_on:
      - cms-mysql
    command: /bin/bash -c "php-fpm | /usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf"

  # Nginx Service
  cms-webserver:
    build:
      context: ./
      dockerfile: webserver.dockerfile
    container_name: cms-webserver
    tty: true
    ports:                     # Forward the port for Nginx
      - "8085:80"
    volumes:
      - ./app:/var/www/server
    depends_on:
      - cms-app
    networks:
      - cms-network

  # MySQL Service
  cms-mysql:
    image: mariadb:latest
    container_name: cms-mariadb
    restart: always
    tty: true
    environment:
      MYSQL_DATABASE: cms
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
    ports:
      - "33068:3306"
    volumes:
      - cms_mysql:/var/lib/mysql/
      - ./mysql:/etc/mysql/conf.d/my.cnf
    networks:
      - cms-network

networks:
  cms-network:
    driver: bridge

volumes:
  cms_mysql:
    driver: local
FROM php:8.3-fpm

# Set working directory
WORKDIR /var/www/server

# Install system dependencies and PHP extensions
RUN apt-get update && apt-get install -y \
    zlib1g-dev \
    libzip-dev \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    unzip \
    supervisor \
    curl \
    git \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-install pdo pdo_mysql mysqli zip bcmath \
    && pecl install mongodb redis \
    && docker-php-ext-enable mongodb redis \
    && rm -rf /tmp/pear \
    && apt-get clean

# Add User for application
RUN groupadd -g 1000 www && \
    useradd -u 1000 -ms /bin/bash -g www www

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Set the permission of the working directory
RUN mkdir -p /var/www/server/vendor && \
    chown -R www:www /var/www/server && \
    chmod -R 775 /var/www/server

# Copy existing application directory contents and permissions
COPY --chown=www:www ./app /var/www/server

# Copy supervisor configuration
COPY ./supervisord /etc/supervisor/conf.d

# Switch to the non-root User
USER www

# Expose port 9000 and start php-fpm server
EXPOSE 9000
CMD ["php-fpm"]
[program:laravel-worker-queue]
process_name=%(program_name)s_%(process_num)02d
command=php  /var/www/server/artisan queue:listen redis --sleep=3 --tries=3
autostart=true
autorestart=true
user=root
numprocs=1
redirect_stderr=true
#stdout_logfile=/home/forge/app.com/worker.log
stopwaitsecs=3600

upload_max_filesize=10M
post_max_size=10M
max_execution_time=500

server {
    client_max_body_size 20M;

    # default port listener
    listen 80 default_server;
    #listen [::]:80 default_server;

    # turn on the ssl engine during 443 port
    #listen 443 ssl;

    # directories and index
    root /var/www/server/public;
    index index.php index.html;

    #server_name app-st.turpal.com;
    #ssl_certificate /etc/nginx/ssl/certificate.crt;
    #ssl_certificate_key /etc/nginx/ssl/private.key;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;


    location ~ \.php$ {
        client_max_body_size 200M;
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass cms-app:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_connect_timeout 1200;
        fastcgi_send_timeout 1200;
        fastcgi_read_timeout 90;
    }
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        gzip_static on;
    }
}


[mysqld]
general_log = 1
general_log_file = /var/lib/mysql/general.log
host_cache_size=0

Php files:


<?php
/**
 * Created by PhpStorm.
 * User: cfi
 * Date: 13/03/16
 * Time: 14:58
 */

// settings.php file
define ('DIRSEP', DIRECTORY_SEPARATOR);
define ('URLSEP', '/');

$app_file_path = realpath(dirname(__FILE__));
$class_file_path = $app_file_path . DIRSEP . 'classes' . DIRSEP;

$app_root_path = dirname($_SERVER['PHP_SELF'], 1) . URLSEP;
$document_root = $_SERVER['HTTP_HOST'];
$app_root_path = 'http://' . $document_root . $app_root_path;

$application_name = 'CryptoShow system';
$media_path = $app_root_path . 'media' . URLSEP;
$petpics_path = $media_path . 'img' . URLSEP;
$css_path = $app_root_path . URLSEP . 'css' . URLSEP;
$js_path = $app_root_path . URLSEP . 'js' . URLSEP;
$css_file_name = 'style.css';

define ('JS_PATH' , $js_path);
define ('CLASS_PATH', $class_file_path);
define ('APP_ROOT_PATH', $app_root_path);
define ('APP_NAME', $application_name);
define ('MEDIA_PATH', $media_path);
define ('PETPICS_PATH', $petpics_path);
define ('CSS_PATH' , $css_path);
define ('CSS_FILE_NAME', $css_file_name);

function getPdoDatabaseConnectionDetails(): array
{
    $rdbms = 'mysql';
    $host = 'cms-mysql';
    $port = '3306';
    $charset = 'utf8mb4';
    $db_name = 'cryptoshow_db'; // This should be the actual database name
    $pdo_dsn = $rdbms . ':host=' . $host. ';port=' . $port . ';dbname=' . $db_name . ';charset=' . $charset;
    $pdo_user_name = 'root';
    $pdo_user_password = 'secret';
    $db_connect_details['pdo_dsn'] = $pdo_dsn;
    $db_connect_details['pdo_user_name'] = $pdo_user_name;
    $db_connect_details['pdo_user_password'] = $pdo_user_password;
    return $db_connect_details;
}

<?php
/**
 * bootstrap.php
 *
 * Sessions: PHP web application to demonstrate how databases
 * are accessed securely
 *
 * Each route is hosted in its own directory. The __autoload function
 * iterates through an array of the directory names, looking for the required class.
 * If the class definition file is find, the class is then checked for correct instantiation.
 *
 * If there are any problems, the error class is instantiated for error processing
 * NB this could also be achieved by throwing an exception in a try-catch structure
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package petshow
 */

include_once 'autoload.php';

include_once 'settings.php';

$router = Factory::buildObject('Router');
$router->routing();
$html_output = $router->getHtmlOutput();

echo $html_output;
<?php
 /**
  * autoload.php
  *
  * for more details, see http://uk1.php.net/manual/en/language.oop5.autoload.php
  *
  * If an attempt is made to instantiate an object is made with the keyword 'new', PHP looks
  * for the class definition.  If the relevant file has not been pre-included this function
  * is called, and the name of the class is passed in as a parameter.  This requires the
  * file name of the class definition file to be identical to the class.
  *
  * The function reads the names of the component directories, and looks in each in turn for the
  * class definition file.  If the relevant file exists, it is included, and the class instantiated.
  *
  * @param $class_name
  *
  * @author CF Ingrams <cfi@dmu.ac.uk>
  * @copyright CFI, De Montfort University
  *
  * @package petshow
  *
  */

spl_autoload_register(function ($class_name)
{
    $file_path_and_name = '';
    $directories = [];

    $file_name = $class_name . '.php';

    $directories = array_diff(scandir(CLASS_PATH), array('..', '.'));

    foreach ($directories as $directory)
    {
        $file_path_and_name = CLASS_PATH . $directory . DIRSEP . $file_name;

        if (file_exists($file_path_and_name))
        {
            require_once $file_path_and_name;
            break;
        }
    }
});

# Enable URL Rewriting
RewriteEngine On

# Redirect all requests not pointing to an actual file to index.php
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^ index.php [QSA,L]

# Application Settings
APP_ENV=local
APP_DEBUG=true
APP_URL=http://localhost:8085

# Database Settings
DB_CONNECTION=mysql
DB_HOST=cms-mysql  # Ensure this matches the service name in docker-compose.yml
DB_PORT=3306
DB_DATABASE=cryptoshow_db  # Adjust according to your actual database name
DB_USERNAME=root
DB_PASSWORD=secret

# Redis Settings (if you use Redis)
REDIS_HOST=cms-redis  # Adjust if you have a Redis service configured
REDIS_PASSWORD=null
REDIS_PORT=6379

# Mail Settings (if you use mailing features)
MAIL_MAILER=smtp
MAIL_HOST=smtp.example.com  # Change to your mail server
MAIL_PORT=587  # Change to your mail server port
MAIL_USERNAME=user@example.com
MAIL_PASSWORD=password
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="CryptoShow System"

# Add any additional environment variables your application requires

app/public/index.php
<?php
/**
 * index.php
 *
 * Petshow: PHP web application to demonstrate how databases are accessed securely
 *
 * NB the include_path setting in php.ini must be correctly set to access the sensitive application files
 *
 * NB $make_trace enables/disables the creation of xdebug trace files
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package petshow
 */


include '../bootstrap.php';





<?php

/**
 * DeviceController.php
 */
class DeviceController extends ControllerAbstract
{
    private $deviceModel;

    public function __construct(DeviceModel $deviceModel)
    {
        parent::__construct();
        $this->deviceModel = $deviceModel;
    }

    public function listUserDevices($userId)
    {
        $devices = $this->deviceModel->getDevicesByUserId($userId);
        //... create HTML output for device list
    }

    public function addDevice($userId, $deviceDetails)
    {
        $this->deviceModel->insertNewDevice($deviceDetails);
        //... create HTML output for successful device addition or display error
    }

    public function updateDevice($userId, $deviceId, $deviceDetails)
    {
        $this->deviceModel->updateDeviceById($deviceDetails);
        //... create HTML output for successful device update or display error
    }

    public function deleteDevice($userId, $deviceId)
    {
        $this->deviceModel->deleteDeviceById($deviceId, $userId);
        //... create HTML output for successful device deletion or display error
    }

    protected function createHtmlOutput()
    {
        // The actual implementation should populate $this->html_output based on the action performed
    }

    // Add other methods as needed for creating HTML output for each action
}


<?php
/** ErrorController class
 *
 *	FrontEnd controller class for all error message processing
 *
 * @package petshow
 */

class ErrorController extends ControllerAbstract
{
    private $error_type;

    public function createHtmlOutput()
    {
        $error_message = $this->processErrorModel();
        $this->html_output = $this->createOutputView($error_message);
    }

    public function setErrorType($error_type)
    {
        $this->error_type = $error_type;
    }

    public function processErrorModel()
    {
        $database = Factory::createDatabaseWrapper();
        $model = Factory::buildObject('ErrorModel');

        $model->setDatabaseHandle($database);
        $model->setErrorType($this->error_type);
        $model->selectErrorMessage();
        $model->logErrorMessage();
        $error_message = $model->getErrorMessage();
        return $error_message;
    }

    public function createOutputView($error_message)
    {
        $view = Factory::buildObject('ErrorView');
        $view->setErrorMessage($error_message);
        $view->createErrorMessage();
        $html_output = $view->getHtmlOutput();

        return $html_output;
    }
}
<?php

/**
 * EventController.php
 */
class EventController extends ControllerAbstract
{
    private $eventModel;

    public function __construct(EventModel $eventModel)
    {
        parent::__construct();
        $this->eventModel = $eventModel;
    }

    public function listAllEvents()
    {
        $events = $this->eventModel->getAllEvents();
        //... create HTML output for the event list
    }

    public function showUserEvents($userId)
    {
        $events = $this->eventModel->getEventsForUser($userId);
        //... create HTML output for the user-specific event list
    }

    public function addUserEvent($userId, $eventId)
    {
        $this->eventModel->linkUserWithEvent($userId, $eventId);
        //... create HTML output for successfully linking user to the event
    }

    public function updateEvent($eventId, $eventDetails)
    {
        $this->eventModel->updateEventById($eventDetails);
        //... create HTML output for successful event update
    }

    public function deleteEvent($eventId)
    {
        $this->eventModel->deleteEventById($eventId);
        //... create HTML output for successful event deletion
    }

    // Define createHtmlOutput method that will produce the final HTML response
    protected function createHtmlOutput()
    {
        // The actual implementation should populate $this->html_output based on the action performed
    }

    // Implement additional methods to create HTML outputs for each specific action if necessary
}
<?php
/**
 * IndexController.php
 *
 * Sessions: PHP web application to demonstrate how databases
 * are accessed securely
 *
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package petshow
 */
//var_dump(get_included_files());
class IndexController extends ControllerAbstract
{
    public function createHtmlOutput()
    {
        $view = Factory::buildObject('IndexView');
        $view->createForm();
        $this->html_output = $view->getHtmlOutput();
//        $output = $this->getHtmlOutput();
//        $view = Factory::buildObject('IndexView');
//        $this->html_output = $view->getHtmlOutput();
//        $view = new IndexView(); // Assuming you have an IndexView class
//        $this->html_output = $view->getHtmlOutput(); // getHtmlOutput internally calls generateHTML()
    }
}

<?php
/**
 * UserController.php
 */

class UserController extends ControllerAbstract
{
    private $userModel;

    // This method acts as a constructor.
    public function __construct(UserModel $userModel)
    {
        parent::__construct(); // Call the parent constructor
        $this->userModel = $userModel;
    }

    // Example method for user registration
    public function registerUser($userData)
    {
        // Assume $userData contains all necessary user data
        $registrationResult = $this->userModel->insertNewUser($userData);

        if ($registrationResult) {
            // Registration successful
            $this->createSuccessHtmlOutput();
        } else {
            // Registration failed
            $this->createErrorHtmlOutput();
        }
    }

    // Example method for user login
    public function loginUser($email, $password)
    {
        $user = $this->userModel->getUserByEmail($email);

        if ($user && password_verify($password, $user['user_hashed_password'])) {
            // Login successful
            $this->createLoginSuccessHtmlOutput($user);
        } else {
            // Login failed
            $this->createLoginErrorHtmlOutput();
        }
    }

    protected function createHtmlOutput()
    {
        // Implementation depends on the specific action (e.g., registration, login)
    }

    private function createSuccessHtmlOutput()
    {
        // Create HTML output for successful registration
    }

    private function createErrorHtmlOutput()
    {
        // Create HTML output for failed registration
    }

    private function createLoginSuccessHtmlOutput($user)
    {
        // Create HTML output for successful login, possibly including user-specific data
    }

    private function createLoginErrorHtmlOutput()
    {
        // Create HTML output for failed login
    }
}

<?php
/**
 * ControllerAbstract.php
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package crypto-show
 */

abstract class ControllerAbstract
{
    protected $html_output;

    public function __construct()
    {
        $this->html_output = '';
    }

    public final function __destruct(){}

    public function getHtmlOutput(): string
    {
        return $this->html_output;
    }

    abstract protected function createHtmlOutput();

}
<?php
/**
 * DatabaseWrapper.php
 *
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package crypto-show
 */

class DatabaseWrapper
{
    private $database_connect_details;
    private $database_connection_messages;
    private $database_handle;
    private $prepared_statement;

    public function __construct()
    {
        $this->database_connect_details = array();
        $this->database_handle = null;
        $this->prepared_statement = null;
        $this->database_connection_messages = array();
    }

    /**
     * ensure disconnection of all service handles
     */
    public function __destruct()
    {
        $this->database_handle = null;
    }

    /**
     * Assign the connection settings array to a class attribute
     *
     * @param $connection_settings
     */
    public function setConnectionSettings($connection_settings)
    {
        $this->database_connect_details = $connection_settings;
    }

    /**
     * connect to the required database
     * generate error messages on error
     */
    public function connectToDatabase()
    {
        $database_connection_error = false;
        $pdo_dsn = $this->database_connect_details['pdo_dsn'];
        $pdo_user_name = $this->database_connect_details['pdo_user_name'];
        $pdo_user_password = $this->database_connect_details['pdo_user_password'];

        // attempt to connect to database server & specified database
        try {
            $this->database_handle = new PDO($pdo_dsn, $pdo_user_name, $pdo_user_password);
            $this->database_connection_messages['connection'] = 'Connected to the database.';
        } catch (PDOException $exception_object) {
            $this->database_connection_messages['connection'] = 'Cannot connect to the database.';
            $database_connection_error = true;
            trigger_error($exception_object);
        }
        $this->database_connection_messages['database-connection-error'] = $database_connection_error;
    }

    public function getConnectionMessages()
    {
        return $this->database_connection_messages;
    }

    /**
     * using prepared statements
     *
     * @param $query_string
     * @param null $query_parameters
     * @return array
     */
    public function safeQuery($query_string, $query_parameters = null)
    {
        $database_query_execute_error = false;

        try {
            $temp = array();
            $this->database_handle->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

            $this->prepared_statement = $this->database_handle->prepare($query_string);

            $execute_result = $this->prepared_statement->execute($query_parameters);
            $this->database_connection_messages['execute-OK'] = $execute_result;
        } catch (PDOException $exception_object) {
            $error_message  = 'PDO Exception caught. ';
            $error_message .= 'Error with the database access. ';
            $error_message .= 'SQL query: ' . $query_string;
            $error_message .= 'Error: ' . print_r($this->prepared_statement->errorInfo(), true) . "\n";
            // NB would usually output to file for sysadmin attention
            $database_query_execute_error = true;
            $this->database_connection_messages['sql-error'] = $error_message;
            $this->database_connection_messages['pdo-error-code'] = $this->prepared_statement->errorInfo();
            trigger_error($exception_object);
        }
        $this->database_connection_messages['database-query-execute-error'] = $database_query_execute_error;
        return $this->database_connection_messages;
    }

    /**
     * count number of returned rows in the returned record set
     *
     * @return mixed
     */
    public function countRows()
    {
        $num_rows = $this->prepared_statement->rowCount();
        return $num_rows;
    }

    /**
     * count number of returned fields in the record set
     *
     * @param $query_result
     * @return mixed
     */
    public function countFields()
    {
        $num_fields = $this->prepared_statement->columnCount();
        return $num_fields;
    }

    /**
     * return the record set with field indices
     *
     * @return mixed
     */
    public function safeFetchRow()
    {
        $row = $this->prepared_statement->fetch(PDO::FETCH_NUM);
        return $row;
    }

    /**
     * return the record set with field names
     *
     * @return mixed
     */
    public function safeFetchArray()
    {
        $row = $this->prepared_statement->fetch(PDO::FETCH_ASSOC);
        if (is_array($row)) {
            $row = $this->escapeOutput($row);
        }
        return $row;
    }

    /**
     * return the record set as an object
     *
     * @return mixed
     */
    public function safeFetchAllResults()
    {
        $row = $this->prepared_statement->fetchAll();
        return $row;
    }

    /**
     * return the record set as an object
     *
     * @return mixed
     */
    public function safeFetchObject()
    {
        $row = $this->prepared_statement->fetchObject();
        return $row;
    }

    /**
     * get id of last inserted row (auto-increment field)
     *
     * @return mixed
     */
    public function lastInsertedId()
    {
        $sql_query = 'SELECT LAST_INSERT_ID()';

        $this->safeQuery($sql_query);
        $last_inserted_id = $this->safeFetchArray();
        $last_inserted_id = $last_inserted_id['LAST_INSERT_ID()'];
        return $last_inserted_id;
    }

    /**
     * Dumps the information contained by a prepared statement directly on the output.
     * It will provide the SQL query in use, the number of parameters used (Params),
     * the list of parameters, with their name, type (paramtype) as an integer, their
     * key name or position, the value, and the position in the query (if this is
     * supported by the PDO driver, otherwise, it will be -1).
     *
     * @return $debug_dump_params
     */
    public function debugDumpParameters()
    {
        $debug_dump_params = $this->prepared_statement->debugDumpParams();
        return $debug_dump_params;
    }

    /**
     * apply htmlspecialchars function to each value in an array of data returned from the database
     *
     * @param array $row
     * @return array
     */
    private function escapeOutput(array $row)
    {
        $output_row = [];
        foreach ($row as $key => $item) {
            if ($item !== null) {
                $output_row[$key] = htmlspecialchars($item);
            }
        }
        return $output_row;
    }
}
<?php
/**
 * Factory.php
 * PHP web application to demonstrate how databases are accessed securely
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package petshow
 */

class Factory
{
    public function __construct(){}

    public function __destruct(){}

    /**
     * build any object and return a resource handle to the object
     */
    public static function buildObject($class)
    {
        $object = new $class();
        return $object;
    }

    public static function createDatabaseWrapper()
    {
        $database = Factory::buildObject('DatabaseWrapper');
        $connection_parameters = getPdoDatabaseConnectionDetails();
        $database->setConnectionSettings($connection_parameters);
        $database->connectToDatabase();
        return $database;
    }
}
<?php
/**
 * ProcessOutput.php
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package petshow
 */
//var_dump(get_included_files());
class ProcessOutput
{
    public function __construct(){}

    public function __destruct(){}

    public function assembleOutput($html_output)
    {
        $minified_output = '';
        $compressed_output = '';
        $minified_output = $this->minifyHtmlOutput($html_output);
        $compressed_output = $this->compressOutput($minified_output);
        return $compressed_output;
   }

    /**
     * Remove any unnecessary characters to reduce page latency
     *
     * @param $html_output
     * @return string|string[]|null
     */
    private function minifyHtmlOutput($html_output)
    {
        $html_minified_output = '';
        $search = array(
            '/\>[^\S ]+/s',
            '/[^\S ]+\</s',
            '/(\s)+/s'
        );
        $replace = array(
            '>',
            '<',
            '\\1'
        );

        if (preg_match("/\<html/i",$html_output) == 1 && preg_match("/\<\/html\>/i",$html_output) == 1)
        {
            $html_minified_output = preg_replace($search, $replace, $html_output);
        }
        return $html_minified_output;
    }

    /**
     * Use a compression algorithm to reduce size, and therefore reduce transit latency
     *
     * @param $minified_output
     * @return string
     */
    private function compressOutput($minified_output)
    {
        $compressed_output = $minified_output;
        if (strpos($_SERVER['HTTP_USER_AGENT'], 'Opera') != 0)
        {
            if (strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip'))
            {
                $compression_level = 9;
                $encoding_mode = FORCE_DEFLATE;
                $compressed_output = gzencode($minified_output, $compression_level, $encoding_mode);
            }
        }
        return $compressed_output;
    }

}
<?php
/**
 * Router.php
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package petshow
 */

class Router
{
    private $html_output;

    public function __construct()
    {
        $this->html_output = '';
    }

    public function __destruct(){}

    public function routing()
    {
        $html_output = '';

        $selected_route = $this->setRouteName();
        $route_exists = $this->validateRouteName($selected_route);

        if ($route_exists == true)
        {
            $html_output = $this->selectController($selected_route);
        }
        $this->html_output = $this->processOutput($html_output);
    }

    /**
     * Set the default route to be index
     *
     * Read the name of the selected route from the magic global POST array and overwrite the default if necessary
     *
     * @return mixed|string
     */
    private function setRouteName()
    {
        $selected_route = 'index';
        if (isset($_POST['route']))
        {
            $selected_route = $_POST['route'];
        }
        return $selected_route;
    }

    /**
     * Check to see that the route name passed from the client is valid.
     * If not valid, chances are that a user is attempting something malicious.
     * In which case, kill the app's execution.
     */
    private function validateRouteName($selected_route)
    {
        $route_exists = false;
        $validate = Factory::buildObject('Validate');
        $route_exists = $validate->validateRoute($selected_route);
        return $route_exists;
    }

    public function selectController($selected_route)
    {
        switch ($selected_route)
        {
            case 'Show_device_names':
                $controller = Factory::buildObject('DeviceController');
                break;
            case 'display_event_details':
                $controller = Factory::buildObject('EventController');
                break;
            case 'index':
            default:
            $controller = Factory::buildObject('IndexController');
                break;
        }
        $controller->createHtmlOutput();
        $html_output = $controller->getHtmlOutput();
        return $html_output;
    }

    private function processOutput(string $html_output)
    {
        $processed_html_output = '';
        $process_output = Factory::buildObject('ProcessOutput');
        $processed_html_output = $process_output->assembleOutput($html_output);
        return $processed_html_output;
    }

    public function getHtmlOutput()
    {
        return $this->html_output;
    }
}
<?php
/**
 * SqlQuery.php
 * PHP web application to demonstrate how databases are accessed securely
 *
 *This class groups together all the SQL queries that are used within the application
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package petshow
 */

class SqlQuery
{

    public function __construct(){}

    public function __destruct(){}

//    public static function queryGetPetNames()
//    {
//        $sql_query_string  = 'SELECT pet_name';
//        $sql_query_string .= ' FROM pet';
//        return $sql_query_string;
//    }
//
//    public static function queryGetPetDetails()
//    {
//        $sql_query_string  = 'SELECT pet.pet_index, pet_name, owner_initials, pet_type,';
//        $sql_query_string .= ' pet_sex, pet_dob, pet_is_alive, pet_do_death,';
//        $sql_query_string .= ' pet_pic_source, pet_description';
//        $sql_query_string .= ' FROM pet, petpics';
//        $sql_query_string .= ' WHERE pet_name = :petname';
//        $sql_query_string .= ' AND pet.pet_index = petpics.pet_index';
//        $sql_query_string .= ' LIMIT 1';
//        return $sql_query_string;
//    }
//
//    public static function queryGetErrorLoggingQueryString()
//    {
//        $sql_query_string  = 'INSERT INTO error_log';
//        $sql_query_string .= ' SET';
//        $sql_query_string .= ' log_message = :logmessage';
//        return $sql_query_string;
//    }

    public static function queryGetUserByEmail(): string
    {
        return "SELECT user_id, user_hashed_password FROM registered_user WHERE user_email = :user_email;";
    }

    public static function queryInsertNewUser(): string
    {
        return "INSERT INTO registered_user (user_nickname, user_name, user_email, user_hashed_password, user_device_count, user_registered_timestamp)
                VALUES (:user_nickname, :user_name, :user_email, :user_hashed_password, :user_device_count, NOW());";
    }

    public static function queryRetrieveDevicesByUserId(): string
    {
        return "SELECT * FROM crypto_device WHERE fk_user_id = :user_id;";
    }

    public static function queryInsertNewDevice(): string
    {
        return "INSERT INTO crypto_device (fk_user_id, crypto_device_name, crypto_device_image_name, crypto_device_record_visible, crypto_device_registered_timestamp)
                VALUES (:fk_user_id, :crypto_device_name, :crypto_device_image_name, :crypto_device_record_visible, NOW());";
    }

    public static function queryRetrieveAllEvents(): string
    {
        return "SELECT * FROM event;";
    }

    public static function queryLinkUserWithEvent(): string
    {
        return "INSERT INTO user_event (fk_user_id, fk_event_id) VALUES (:fk_user_id, :fk_event_id);";
    }

    public static function queryRetrieveEventsForUser(): string
    {
        return "SELECT e.* FROM event e
                INNER JOIN user_event ue ON e.event_id = ue.fk_event_id
                WHERE ue.fk_user_id = :user_id;";
    }

    public static function queryUpdateDeviceById(): string
    {
        return "UPDATE crypto_device SET 
            crypto_device_name = :crypto_device_name, 
            crypto_device_image_name = :crypto_device_image_name, 
            crypto_device_record_visible = :crypto_device_record_visible
            WHERE crypto_device_id = :crypto_device_id AND fk_user_id = :fk_user_id;";
    }

    public static function queryDeleteDeviceById(): string
    {
        return "DELETE FROM crypto_device WHERE crypto_device_id = :crypto_device_id AND fk_user_id = :fk_user_id;";
    }

    public static function queryUpdateEventById(): string
    {
        return "UPDATE event SET 
            event_name = :event_name, 
            event_date = :event_date, 
            event_venue = :event_venue
            WHERE event_id = :event_id;";
    }

    public static function queryDeleteEventById() {
        return "DELETE FROM event WHERE event_id = :event_id;";
    }


}
<?php
/**
 * Validate.php  * Sessions: PHP web application to demonstrate how databases
 * are accessed securely
 *
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package petshow
 */

class Validate
{
    public function __construct()
    {
    }

    public function __destruct()
    {
    }

    /**
     * Check that the route name from the browser is a valid route
     * If it is not, abandon the processing.
     * NB this is not a good way to achieve this error handling.
     *
     * @param $route
     * @return boolean
     */
    public function validateRoute($route)
    {
        $route_exists = false;
        $routes = [
            'index',
            'Show_device_names',
            'display_event_details'
        ];
        if (in_array($route, $routes)) {
            $route_exists =  true;
        } else {
            die();
        }
//        var_dump($route_exists);
        return $route_exists;
    }

    public function validateString(
        string $datum_name,
        array $tainted,
        int $min_length = null,
        int $max_length = null
    ) {
        $validated_string = false;
        if (!empty($tainted[$datum_name])) {
            $string_to_check = $tainted[$datum_name];
            $sanitised_string = filter_var(
                $string_to_check,
                FILTER_SANITIZE_SPECIAL_CHARS,
                FILTER_FLAG_NO_ENCODE_QUOTES
            );
            $sanitised_string_length = strlen($sanitised_string);
            if ($min_length <= $sanitised_string_length && $sanitised_string_length <= $max_length) {
                $validated_string = $sanitised_string;
            }
        }
        return $validated_string;
    }

}
<?php
  /**
   * WebPageTemplateView.php  * Sessions: PHP web application to demonstrate how databases
   * are accessed securely
   *
   *
   * @author CF Ingrams - cfi@dmu.ac.uk
   * @copyright De Montfort University
   *
   * @package petshow
   */


  class WebPageTemplateView {
    protected $page_title;
    protected $html_page_content;
    protected $html_page_output;
      /**
       * @var string
       */

      public function __construct() {
        $this->page_title = '';
        $this->html_page_content = '';
        $this->html_page_output = '';
    }
      public function __destruct(){}
     public function createWebPage()
     {
         echo 'Creating Web Page...<br>';
         $this->createHeadSection();
         $this->createHeader();
         $this->createFooter();
     }

    protected function createHeadSection() {
        $css_path = CSS_PATH;
        $css_filename = 'style.css'; // Assuming you have a main stylesheet named style.css
        $css_animate_filename = 'animate.css'; // Assuming you have a main stylesheet named animate.css
        $custom_scripts = 'custom-scripts.css'; // Assuming you have a main stylesheet named custom-scripts.css
        $css_index = 'index.css'; // Assuming you have a main stylesheet named style.css
        $html_output = <<<HTML
<!DOCTYPE html>
<html lang="en">
<head>
    <title>Main</title>
    <meta property="og:title" content="Main" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta charset="utf-8" />
    <meta property="twitter:card" content="summary_large_image" />
    <link rel="stylesheet" href="{$css_path}{$css_filename}" type="text/css" />
    <link rel="stylesheet" href="{$css_path}{$css_animate_filename}" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&amp;display=swap" />
    <link rel="stylesheet" href="{$css_path}{$custom_scripts}" />
    <link rel="stylesheet" href="{$css_path}{$css_index}" />
    <style>
        html { scroll-behavior: smooth; }
        /* Additional in-line CSS can be placed here */
    </style>
    <style data-tag="reset-style-sheet">
      html {  line-height: 1.15;}body {  margin: 0;}* {  box-sizing: border-box;  border-width: 0;  border-style: solid;}p,li,ul,pre,div,h1,h2,h3,h4,h5,h6,figure,blockquote,figcaption {  margin: 0;  padding: 0;}button {  background-color: transparent;}button,input,optgroup,select,textarea {  font-family: inherit;  font-size: 100%;  line-height: 1.15;  margin: 0;}button,select {  text-transform: none;}button,[type="button"],[type="reset"],[type="submit"] {  -webkit-appearance: button;}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner {  border-style: none;  padding: 0;}button:-moz-focus,[type="button"]:-moz-focus,[type="reset"]:-moz-focus,[type="submit"]:-moz-focus {  outline: 1px dotted ButtonText;}a {  color: inherit;  text-decoration: inherit;}input {  padding: 2px 4px;}img {  display: block;}html { scroll-behavior: smooth  }
    </style>
    <style data-tag="default-style-sheet">
      html {
        font-family: Raleway;
        font-size: 18px;
      }

      body {
        font-weight: 400;
        font-style:normal;
        text-decoration: none;
        text-transform: none;
        letter-spacing: normal;
        line-height: 1.55;
        color: var(--dl-color-gray-black);
        background-color: var(--dl-color-gray-white);

      }
    </style>
    <title>$this->page_title</title>
  </head>
  <body>
    <div>
      <div class="home-container">
HTML;

        $this->html_page_output .= $html_output ;
    }


    protected function createHeader() {
        $html_output = <<<HTML
<div data-role="Header" class="home-navbar-container">
    <div class="home-navbar">
        <div class="home-left-side">
            <img alt="image" src="https://play.teleporthq.io/static/svg/default-img.svg" class="home-image" />
            <div data-role="BurgerMenu" class="home-burger-menu">
                <svg viewBox="0 0 1024 1024" class="home-icon">
                    <path d="M128 256h768v86h-768v-86zM128 554v-84h768v84h-768zM128 768v-86h768v86h-768z"></path>
                </svg>
            </div>
            <div class="home-links-container">
                <a href="#resources" class="home-link Anchor">home</a>
                <a href="#process" class="home-link02 Anchor">events</a>
                <a href="#ourstory" class="home-link03 Anchor">devices</a>
                <span class="home-link01 Anchor">about us</span>
                
            </div>
        </div>
        <div class="home-right-side">
            <button type="button" class="home-cta-btn Anchor button">login</button>
        </div>
        <div data-role="MobileMenu" class="home-mobile-menu">
            <div class="home-container1">
                <img alt="image" src="https://play.teleporthq.io/static/svg/default-img.svg" class="home-image1" />
                <div data-role="CloseMobileMenu" class="home-close-menu">
                    <svg viewBox="0 0 1024 1024" class="home-icon02">
                        <path d="M810 274l-238 238 238 238-60 60-238-238-238 238-60-60 238-238-238-238 60-60 238 238 238-238z"></path>
                    </svg>
                </div>
            </div>
            <div class="home-links-container1">
                <a href="#resources" class="home-link04 Anchor">home</a>
                <span class="home-link05 Anchor">events</span>
                <a href="#process" class="home-link06 Anchor">devices</a>
                <a href="#ourstory" class="home-link07 Anchor">Our story</a>
            </div>
        </div>
    </div>
</div>
HTML;

        $this->html_page_output .= $html_output;
    }


    protected function createFooter() {
        // Assuming you've defined JS_PATH and the JavaScript filename somewhere
        $js_path = JS_PATH;
        $js_filename = 'main.js'; // Example JavaScript filename

        $footer = <<<HTML
        <div class="home-section-separator2"></div>
        <div class="home-get-in-touch">
            <h2 class="home-text29 Section-Heading">Get in touch</h2>
            <div class="home-content-container6">
                <div class="home-locations-container">
                    <div class="home-location-1">
                        <span class="home-heading2">Leicester, UK</span>
                        <div class="home-adress">
                            <svg viewBox="0 0 1024 1024" class="home-icon36">
                                <path d="M512 0c-176.732 0-320 143.268-320 320 0 320 320 704 320 704s320-384 320-704c0-176.732-143.27-320-320-320zM512 512c-106.040 0-192-85.96-192-192s85.96-192 192-192 192 85.96 192 192-85.96 192-192 192z"></path>
                            </svg>
                            <span class="Section-Text">Address</span>
                        </div>
                        <div class="home-email">
                            <svg viewBox="0 0 1024 1024" class="home-icon38">
                                <path d="M854 342v-86l-342 214-342-214v86l342 212zM854 170q34 0 59 26t25 60v512q0 34-25 60t-59 26h-684q-34 0-59-26t-25-60v-512q0-34 25-60t59-26h684z"></path>
                            </svg>
                            <span class="Section-Text">E-mail Address</span>
                        </div>
                        <div class="home-phone">
                            <svg viewBox="0 0 804.5714285714286 1024" class="home-icon40">
                                <path d="M804.571 708.571c0 20.571-9.143 60.571-17.714 79.429-12 28-44 46.286-69.714 60.571-33.714 18.286-68 29.143-106.286 29.143-53.143 0-101.143-21.714-149.714-39.429-34.857-12.571-68.571-28-100-47.429-97.143-60-214.286-177.143-274.286-274.286-19.429-31.429-34.857-65.143-47.429-100-17.714-48.571-39.429-96.571-39.429-149.714 0-38.286 10.857-72.571 29.143-106.286 14.286-25.714 32.571-57.714 60.571-69.714 18.857-8.571 58.857-17.714 79.429-17.714 4 0 8 0 12 1.714 12 4 24.571 32 30.286 43.429 18.286 32.571 36 65.714 54.857 97.714 9.143 14.857 26.286 33.143 26.286 50.857 0 34.857-103.429 85.714-103.429 116.571 0 15.429 14.286 35.429 22.286 49.143 57.714 104 129.714 176 233.714 233.714 13.714 8 33.714 22.286 49.143 22.286 30.857 0 81.714-103.429 116.571-103.429 17.714 0 36 17.143 50.857 26.286 32 18.857 65.143 36.571 97.714 54.857 11.429 5.714 39.429 18.286 43.429 30.286 1.714 4 1.714 8 1.714 12z"></path>
                            </svg>
                            <span class="Section-Text">0116 255 1551</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="home-section-separator3"></div>
        <div class="home-footer-container">
            <div class="home-footer">
                <div class="home-social-links">
                    <!-- Social icons and links -->
                </div>
                <div class="home-copyright-container">
                    <!-- Copyright information -->
                </div>
            </div>
        </div>
    </div>
<script src="{$js_path}{$js_filename}"></script>
</body>
HTML;

        $this->html_page_output .= $footer;
    }


    protected function addJavaScriptFiles() {
        echo 'Adding JavaScript files...<br>';

        // Assuming JS_PATH and a hypothetical JS_FILE_NAME have been defined somewhere in your application settings
        $js_path = JS_PATH; // E.g., '/app/public/js/'
        $js_filenames = ['index.umd.js']; // Example array of JS filenames you want to include

        $scripts = '';
        foreach ($js_filenames as $js_filename) {
            $scripts .= "<script src=\"{$js_path}{$js_filename}\"></script>\n";
        }

        $this->html_page_output .= $scripts;
    }

    // This method needs to be implemented by subclasses to add page-specific content


    public function generateHTML() {
        echo 'Generating HTML...<br>';

        $this->addJavaScriptFiles(); // Add JS files at the end of the body
        $this->createPageContent(); // Generate the specific page content
        echo 'Generated HTML.<br>';

        return $this->html_page_output;
    }

}
<?php
/**
 * ErrorModel.php  * Sessions: PHP web application to demonstrate how databases
 * are accessed securely
 *
 *
 * @author CF Ingrams - cfi@dmu.ac.uk
 * @copyright De Montfort University
 *
 * @package petshow
 */

class ErrorModel
{
    private $database;
    private $error_type;
    private $output_error_message;

    public function __construct()
    {
        $this->database = null;
        $this->error_type = '';
        $this->output_error_message = '';
    }

    public function __destruct(){}

    public function getErrorMessage()
    {
        return $this->output_error_message;
    }

    public function setDatabase($database)
    {
        $this->database = $database;
    }

    public function setErrorType($error_type)
    {
        $this->error_type = $error_type;
    }

    public function selectErrorMessage()
    {
        switch ($this->error_type)
        {
            case 'route-not-found-error':
                $error_message = 'I think you are trying it on ...';
                break;
            case 'class-not-found-error':
            case 'file-not-found-error':
            default:
                $error_message = 'Ooops - there was an internal error - please try again later';
                break;
        }
        $this->output_error_message = $error_message;
    }

    public function logErrorMessage()
    {
        $user_id = '';
        $number_of_inserted_messages = 0;
        $sql_query_string = SqlQuery::queryGetErrorLoggingQueryString();
        $sql_parameters = array(':logmessage' => $this->error_type);
        $this->database->safeQuery($sql_query_string, $sql_parameters);
        $number_of_inserted_messages = $this->database->countRows();
    }
}
<?php

/**
 * EventModel.php
 */
class EventModel
{
    private $database;

    public function __construct($database)
    {
        $this->database = $database;
    }

    public function getAllEvents()
    {
        $query = SqlQuery::queryRetrieveAllEvents();
        $this->database->safeQuery($query, []);
        return $this->database->safeFetchAllResults();
    }

    public function linkUserWithEvent($userId, $eventId)
    {
        $query = SqlQuery::queryLinkUserWithEvent();
        $params = [':fk_user_id' => $userId, ':fk_event_id' => $eventId];
        $this->database->safeQuery($query, $params);
    }

    public function getEventsForUser($userId)
    {
        $query = SqlQuery::queryRetrieveEventsForUser();
        $params = [':user_id' => $userId];
        $this->database->safeQuery($query, $params);
        return $this->database->safeFetchAllResults();
    }

    public function updateEventById($eventDetails)
    {
        $query = SqlQuery::queryUpdateEventById();
        $this->database->safeQuery($query, $eventDetails);
    }

    public function deleteEventById($eventId)
    {
        $query = SqlQuery::queryDeleteEventById();
        $params = [':event_id' => $eventId];
        $this->database->safeQuery($query, $params);
    }
}
<?php

/**
 * UserModel.php
 */
class UserModel
{
    private $database;

    public function __construct($database)
    {
        $this->database = $database;
    }

    public function getUserByEmail($email)
    {
        $query = SqlQuery::queryGetUserByEmail();
        $params = [':user_email' => $email];
        $this->database->safeQuery($query, $params);
        return $this->database->safeFetchArray();
    }

    public function insertNewUser($userDetails)
    {
        $query = SqlQuery::queryInsertNewUser();
        $this->database->safeQuery($query, $userDetails);
        return $this->database->lastInsertedId();
    }
}
<?php
  /**
   * ErrorView.php
   *
   * Sessions: PHP web application to demonstrate how databases
   * are accessed securely
   *
   *
   * @author CF Ingrams - cfi@dmu.ac.uk
   * @copyright De Montfort University
   *
   * @package petshow
   */

  class ErrorView extends WebPageTemplateView
  {
    private $error_message;
    private $db_handle;

    public function __construct()
    {
      parent::__construct();
      $this->error_message = '';
      $this->error_message = '';
      $this->db_handle = null;
    }

    public function __destruct(){}

    public function setErrorMessage($error_message)
    {
      $this->error_message = $error_message;
    }

    public function setDatabaseHandle($db_handle)
    {
      $this->db_handle = $db_handle;
    }

    public function createErrorMessage()
    {
      $this->setPageTitle();
      $this->createPageBody();
      $this->createWebPage();
    }

    public function getHtmlOutput()
    {
      return $this->html_page_output;
    }

    private function setPageTitle()
    {
      $app_name = APP_NAME;
      $this->page_title = $app_name . ': processing error...';
    }

    private function createPageBody()
    {
      $address = APP_ROOT_PATH;
      $page_heading = 'PetShow System Error';
      $system_message = 'The System Administrator has been notified.';
      $html_output = <<< HTML
<h2>$page_heading</h2>
<p>$this->error_message</p>
<p>$system_message</p>
HTML;
      $this->html_page_content = $html_output;
    }
  }
<?php
/**
 * IndexView.php
 *
 * Sessions: PHP web application to demonstrate how databases
 * are accessed securely
 *
 *
 * @author M Madadi
 * @copyright De Montfort University
 *
 * @package CryptoShow system CMS
 */
//class IndexView extends WebPageTemplateView
//{
//
//    public function __construct()
//    {
//        parent::__construct();
//    }
//
//    public function __destruct(){}
//
//    public function createForm()
//    {
//        $this->setPageTitle();
//        $this->createPageBody();
//        $this->createWebPage();
//    }
//
//    public function getHtmlOutput()
//    {
//        return $this->html_page_output;
//    }
//
//    private function setPageTitle()
//    {
//        $this->page_title = 'CryptoShow System Index Page';
//    }
//
//    private function createPageBody()
//    {
//        $address = APP_ROOT_PATH;
//        $info_text = 'Application will allow you to select a pet\'s name, and to view the details of the pet.';
//        $page_heading = 'CryptoShow demonstration';
//        $this->html_page_content = <<< HTMLFORM
//<h2>$page_heading</h2>
//<p>$info_text</p>
//<form action="$address" method="post">
//<p class="curr_page"></p>
//<fieldset>
//<legend>Select option</legend>
//<br />
//<button name="route" value="show_pet_names">Show Pet Names</button>
//<br />
//<br />
//<button name="route" value="display_pet_details">Display Pet Details</button>
//</fieldset>
//</form>
//HTMLFORM;
//    }
//}

class IndexView extends WebPageTemplateView
{
    public function __construct()
    {
        parent::__construct();
    }
    public function createForm()
    {
        $this->setPageTitle();
        $this->createPageContent();
        $this->createWebPage();
    }
    public function getHtmlOutput(): string
    {
        return $this->html_page_output;
    }
    private function setPageTitle()
    {
        $this->page_title = 'CryptoShow System Index Page';
    }

    protected function createPageContent() {

        $this->html_page_content .= <<<HTMLCONTENT
        <div id="resources" class="home-hero">
          <div class="home-content-container">
            <div class="home-hero-text">
              <h1 class="home-heading Section-Heading">What is Cryptoshow</h1>
              <span class="home-text Section-Text">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer
                nec odio. Praesent libero. Sed cursus ante dapibus diam.c Sed
                nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis
                ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta.
                Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent
                taciti sociosqu ad litora torquent per conubia nostra, per
                inceptos himenaeos.
              </span>
              <button class="home-cta-btn1 Anchor button">START NOW</button>
            </div>
          </div>
        </div>
        <div id="process" class="home-events">
          <div class="home-heading-container">
            <h1 class="home-text01 Section-Heading">Events</h1>
            <span class="home-text02 Section-Text">
              Lorme ipsum dolor sit amet, consectetur adipiscing elit. Integer
              nec odio. Praesent libero.
            </span>
          </div>
          <div class="home-cards-container">
            <div class="home-event-card">
              <h3 class="home-text03 Card-Heading">Resources</h3>
              <span class="home-text04 Card-Text">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer
                nec odio. Praesent libero.
              </span>
              <span class="Card-Text">12 Apr 2021</span>
              <span class="Anchor">Learn more</span>
            </div>
            <div class="home-event-card1">
              <h3 class="home-text05 Card-Heading">Community</h3>
              <span class="home-text06 Card-Text">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer
                nec odio. Praesent libero.
              </span>
              <span class="Card-Text">12 Apr 2021</span>
              <span class="Anchor">Learn more</span>
            </div>
            <div class="home-event-card2">
              <h3 class="home-text07 Card-Heading">Newsroom</h3>
              <span class="home-text08 Card-Text">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer
                nec odio. Praesent libero.
              </span>
              <span class="Card-Text">12 Apr 2021</span>
              <span class="Anchor">Learn more</span>
            </div>
          </div>
          <button type="button" class="home-button button">More Events</button>
        </div>
        <div class="home-section-separator"></div>
        <div class="home-users">
          <div class="home-heading-container1">
            <h1 class="home-text09 Section-Heading">Last Users</h1>
            <span class="home-text10 Section-Text">
              Lorme ipsum dolor sit amet, consectetur adipiscing elit. Integer
              nec odio. Praesent libero.
            </span>
          </div>
          <div class="home-cards-container1">
            <div class="home-user-card">
              <div class="home-avatar-container">
                <svg viewBox="0 0 1024 1024" class="home-icon04">
                  <path
                    d="M576 706.612v-52.78c70.498-39.728 128-138.772 128-237.832 0-159.058 0-288-192-288s-192 128.942-192 288c0 99.060 57.502 198.104 128 237.832v52.78c-217.102 17.748-384 124.42-384 253.388h896c0-128.968-166.898-235.64-384-253.388z"
                  ></path>
                </svg>
              </div>
              <span class="home-name Card-Heading">John</span>
              <span class="home-position Card-Text">Position</span>
            </div>
            <div class="home-user-card1">
              <div class="home-avatar-container1">
                <svg viewBox="0 0 1024 1024" class="home-icon06">
                  <path
                    d="M576 706.612v-52.78c70.498-39.728 128-138.772 128-237.832 0-159.058 0-288-192-288s-192 128.942-192 288c0 99.060 57.502 198.104 128 237.832v52.78c-217.102 17.748-384 124.42-384 253.388h896c0-128.968-166.898-235.64-384-253.388z"
                  ></path>
                </svg>
              </div>
              <span class="home-name1 Card-Heading">Megan</span>
              <span class="home-position1 Card-Text">Position</span>
            </div>
            <div class="home-user-card2">
              <div class="home-avatar-container2">
                <svg viewBox="0 0 1024 1024" class="home-icon08">
                  <path
                    d="M576 706.612v-52.78c70.498-39.728 128-138.772 128-237.832 0-159.058 0-288-192-288s-192 128.942-192 288c0 99.060 57.502 198.104 128 237.832v52.78c-217.102 17.748-384 124.42-384 253.388h896c0-128.968-166.898-235.64-384-253.388z"
                  ></path>
                </svg>
              </div>
              <span class="home-name2 Card-Heading">Alex</span>
              <span class="home-position2 Card-Text">Position</span>
            </div>
            <div class="home-user-card3">
              <div class="home-avatar-container3">
                <svg viewBox="0 0 1024 1024" class="home-icon10">
                  <path
                    d="M576 706.612v-52.78c70.498-39.728 128-138.772 128-237.832 0-159.058 0-288-192-288s-192 128.942-192 288c0 99.060 57.502 198.104 128 237.832v52.78c-217.102 17.748-384 124.42-384 253.388h896c0-128.968-166.898-235.64-384-253.388z"
                  ></path>
                </svg>
              </div>
              <span class="home-name3 Card-Heading">Sabrina</span>
              <span class="home-position3 Card-Text">Position</span>
            </div>
            <div class="home-user-card4">
              <div class="home-avatar-container4">
                <svg viewBox="0 0 1024 1024" class="home-icon12">
                  <path
                    d="M576 706.612v-52.78c70.498-39.728 128-138.772 128-237.832 0-159.058 0-288-192-288s-192 128.942-192 288c0 99.060 57.502 198.104 128 237.832v52.78c-217.102 17.748-384 124.42-384 253.388h896c0-128.968-166.898-235.64-384-253.388z"
                  ></path>
                </svg>
              </div>
              <span class="home-name4 Card-Heading">Ben</span>
              <span class="home-position4 Card-Text">Position</span>
            </div>
          </div>
        </div>
        <div class="home-section-separator1"></div>
        <div id="ourstory" class="home-devices">
          <div class="home-heading-container2">
            <h1 class="home-text11 Section-Heading">Devices</h1>
            <span class="home-text12 Section-Text">
              Lorme ipsum dolor sit amet, consectetur adipiscing elit. Integer
              nec odio. Praesent libero.
            </span>
          </div>
          <div class="home-cards-container2">
            <div class="home-left-section">
              <div class="home-video-container">
                <video class="home-video"></video>
                <div class="home-play-container">
                  <svg viewBox="0 0 1024 1024" class="home-icon14">
                    <path
                      d="M512 854q140 0 241-101t101-241-101-241-241-101-241 101-101 241 101 241 241 101zM512 86q176 0 301 125t125 301-125 301-301 125-301-125-125-301 125-301 301-125zM426 704v-384l256 192z"
                    ></path>
                  </svg>
                </div>
              </div>
              <div class="home-content-container1">
                <span class="home-heading1 Card-Heading">
                  This text is the name of the article. Lorem ipsum dolor sit
                  metsed do eiusm od tempor.
                </span>
                <span class="home-text13 Card-Text">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  Integer nec odio. Praesent libero. Sed cursus ante dapibus
                  diam.c Sed nisi. Nulla quis sem at nibh elementum imperdiet.
                  Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed
                  augue semper porta. Mauris massa. Vestibulum lacinia arcu eget
                  nulla. Class aptent taciti sociosqu ad litora torquent per
                  conubia nostra, per inceptos himenaeos.
                </span>
                <span class="home-text14 Card-Text">
                  Fusce nec tellus sed augue semper porta. Mauris massa.
                  Vestibulum lacinia arcu eget nulla. Class aptent taciti
                  sociosqu ad litora torquent per conubia nostra, per inceptos
                  himenaeos.
                </span>
                <span class="Anchor">Read more</span>
              </div>
              <div class="home-info-container">
                <div class="home-stats-container">
                  <div class="home-messages-container">
                    <svg viewBox="0 0 1024 1024" class="home-icon16">
                      <path
                        d="M938.667 490.539v-21.205c0-0.725-0.043-1.621-0.085-2.475-5.803-99.755-47.488-190.336-112.768-258.176-68.352-71.125-162.731-117.419-268.843-123.264-0.64-0.043-1.493-0.085-2.304-0.085h-20.864c-59.947-0.683-122.965 13.227-181.931 43.008-52.181 26.539-97.749 63.531-133.931 108.203-56.405 69.675-89.899 158.037-89.941 253.653-0.597 54.4 10.795 111.36 35.157 165.419l-75.605 226.859c-2.816 8.363-3.072 17.835 0 26.965 7.467 22.357 31.616 34.432 53.973 26.965l226.731-75.563c49.493 22.485 105.984 35.243 165.376 35.115 58.539-0.384 115.84-13.141 168.149-36.949 81.579-37.163 151.040-101.248 193.707-186.667 27.477-53.291 43.307-115.84 43.136-181.803zM853.333 490.795c0.128 52.267-12.459 101.333-33.664 142.464-34.176 68.352-88.832 118.784-153.259 148.139-41.387 18.859-86.869 28.971-133.376 29.312-52.096 0.128-101.163-12.459-142.293-33.664-10.624-5.504-22.528-6.059-33.067-2.56l-162.261 54.101 54.101-162.261c3.755-11.221 2.56-22.912-2.389-32.725-23.552-46.72-34.304-96.213-33.792-142.464 0.043-76.331 26.411-145.877 70.912-200.917 28.629-35.328 64.768-64.725 106.283-85.76 46.592-23.552 96.085-34.304 142.336-33.792h19.456c83.712 4.565 158.037 41.003 212.011 97.109 51.285 53.376 84.139 124.416 89.003 202.837z"
                      ></path>
                    </svg>
                    <span class="Card-Text">123</span>
                  </div>
                  <div class="home-views-container">
                    <svg viewBox="0 0 1024 1024" class="home-icon18">
                      <path
                        d="M512 192c-223.318 0-416.882 130.042-512 320 95.118 189.958 288.682 320 512 320 223.312 0 416.876-130.042 512-320-95.116-189.958-288.688-320-512-320zM764.45 361.704c60.162 38.374 111.142 89.774 149.434 150.296-38.292 60.522-89.274 111.922-149.436 150.296-75.594 48.218-162.89 73.704-252.448 73.704-89.56 0-176.858-25.486-252.452-73.704-60.158-38.372-111.138-89.772-149.432-150.296 38.292-60.524 89.274-111.924 149.434-150.296 3.918-2.5 7.876-4.922 11.86-7.3-9.96 27.328-15.41 56.822-15.41 87.596 0 141.382 114.616 256 256 256 141.382 0 256-114.618 256-256 0-30.774-5.452-60.268-15.408-87.598 3.978 2.378 7.938 4.802 11.858 7.302v0zM512 416c0 53.020-42.98 96-96 96s-96-42.98-96-96 42.98-96 96-96 96 42.982 96 96z"
                      ></path>
                    </svg>
                    <span class="Card-Text">4567</span>
                  </div>
                </div>
              </div>
            </div>
            <div class="home-right-section">
              <div class="home-card">
                <img
                  alt="image"
                  src="https://play.teleporthq.io/static/svg/default-img.svg"
                  class="home-image2"
                />
                <div class="home-content-container2">
                  <span class="home-text17 SmallCard-Heading">
                    This text is the name of the article. Lorem ipsum dolor sit
                    metsed ...
                  </span>
                  <span class="Anchor">Read more</span>
                </div>
                <div class="home-info-container1">
                  <div class="home-stats-container1">
                    <div class="home-messages-container1">
                      <svg viewBox="0 0 1024 1024" class="home-icon20">
                        <path
                          d="M938.667 490.539v-21.205c0-0.725-0.043-1.621-0.085-2.475-5.803-99.755-47.488-190.336-112.768-258.176-68.352-71.125-162.731-117.419-268.843-123.264-0.64-0.043-1.493-0.085-2.304-0.085h-20.864c-59.947-0.683-122.965 13.227-181.931 43.008-52.181 26.539-97.749 63.531-133.931 108.203-56.405 69.675-89.899 158.037-89.941 253.653-0.597 54.4 10.795 111.36 35.157 165.419l-75.605 226.859c-2.816 8.363-3.072 17.835 0 26.965 7.467 22.357 31.616 34.432 53.973 26.965l226.731-75.563c49.493 22.485 105.984 35.243 165.376 35.115 58.539-0.384 115.84-13.141 168.149-36.949 81.579-37.163 151.040-101.248 193.707-186.667 27.477-53.291 43.307-115.84 43.136-181.803zM853.333 490.795c0.128 52.267-12.459 101.333-33.664 142.464-34.176 68.352-88.832 118.784-153.259 148.139-41.387 18.859-86.869 28.971-133.376 29.312-52.096 0.128-101.163-12.459-142.293-33.664-10.624-5.504-22.528-6.059-33.067-2.56l-162.261 54.101 54.101-162.261c3.755-11.221 2.56-22.912-2.389-32.725-23.552-46.72-34.304-96.213-33.792-142.464 0.043-76.331 26.411-145.877 70.912-200.917 28.629-35.328 64.768-64.725 106.283-85.76 46.592-23.552 96.085-34.304 142.336-33.792h19.456c83.712 4.565 158.037 41.003 212.011 97.109 51.285 53.376 84.139 124.416 89.003 202.837z"
                        ></path>
                      </svg>
                      <span class="Card-Text">123</span>
                    </div>
                    <div class="home-views-container1">
                      <svg viewBox="0 0 1024 1024" class="home-icon22">
                        <path
                          d="M512 192c-223.318 0-416.882 130.042-512 320 95.118 189.958 288.682 320 512 320 223.312 0 416.876-130.042 512-320-95.116-189.958-288.688-320-512-320zM764.45 361.704c60.162 38.374 111.142 89.774 149.434 150.296-38.292 60.522-89.274 111.922-149.436 150.296-75.594 48.218-162.89 73.704-252.448 73.704-89.56 0-176.858-25.486-252.452-73.704-60.158-38.372-111.138-89.772-149.432-150.296 38.292-60.524 89.274-111.924 149.434-150.296 3.918-2.5 7.876-4.922 11.86-7.3-9.96 27.328-15.41 56.822-15.41 87.596 0 141.382 114.616 256 256 256 141.382 0 256-114.618 256-256 0-30.774-5.452-60.268-15.408-87.598 3.978 2.378 7.938 4.802 11.858 7.302v0zM512 416c0 53.020-42.98 96-96 96s-96-42.98-96-96 42.98-96 96-96 96 42.982 96 96z"
                        ></path>
                      </svg>
                      <span class="Card-Text">4567</span>
                    </div>
                  </div>
                </div>
              </div>
              <div class="home-card1">
                <img
                  alt="image"
                  src="https://play.teleporthq.io/static/svg/default-img.svg"
                  class="home-image3"
                />
                <div class="home-content-container3">
                  <span class="home-text20 SmallCard-Heading">
                    This text is the name of the article. Lorem ipsum dolor sit
                    metsed ...
                  </span>
                  <span class="Anchor">Read more</span>
                </div>
                <div class="home-info-container2">
                  <div class="home-stats-container2">
                    <div class="home-messages-container2">
                      <svg viewBox="0 0 1024 1024" class="home-icon24">
                        <path
                          d="M938.667 490.539v-21.205c0-0.725-0.043-1.621-0.085-2.475-5.803-99.755-47.488-190.336-112.768-258.176-68.352-71.125-162.731-117.419-268.843-123.264-0.64-0.043-1.493-0.085-2.304-0.085h-20.864c-59.947-0.683-122.965 13.227-181.931 43.008-52.181 26.539-97.749 63.531-133.931 108.203-56.405 69.675-89.899 158.037-89.941 253.653-0.597 54.4 10.795 111.36 35.157 165.419l-75.605 226.859c-2.816 8.363-3.072 17.835 0 26.965 7.467 22.357 31.616 34.432 53.973 26.965l226.731-75.563c49.493 22.485 105.984 35.243 165.376 35.115 58.539-0.384 115.84-13.141 168.149-36.949 81.579-37.163 151.040-101.248 193.707-186.667 27.477-53.291 43.307-115.84 43.136-181.803zM853.333 490.795c0.128 52.267-12.459 101.333-33.664 142.464-34.176 68.352-88.832 118.784-153.259 148.139-41.387 18.859-86.869 28.971-133.376 29.312-52.096 0.128-101.163-12.459-142.293-33.664-10.624-5.504-22.528-6.059-33.067-2.56l-162.261 54.101 54.101-162.261c3.755-11.221 2.56-22.912-2.389-32.725-23.552-46.72-34.304-96.213-33.792-142.464 0.043-76.331 26.411-145.877 70.912-200.917 28.629-35.328 64.768-64.725 106.283-85.76 46.592-23.552 96.085-34.304 142.336-33.792h19.456c83.712 4.565 158.037 41.003 212.011 97.109 51.285 53.376 84.139 124.416 89.003 202.837z"
                        ></path>
                      </svg>
                      <span class="Card-Text">123</span>
                    </div>
                    <div class="home-views-container2">
                      <svg viewBox="0 0 1024 1024" class="home-icon26">
                        <path
                          d="M512 192c-223.318 0-416.882 130.042-512 320 95.118 189.958 288.682 320 512 320 223.312 0 416.876-130.042 512-320-95.116-189.958-288.688-320-512-320zM764.45 361.704c60.162 38.374 111.142 89.774 149.434 150.296-38.292 60.522-89.274 111.922-149.436 150.296-75.594 48.218-162.89 73.704-252.448 73.704-89.56 0-176.858-25.486-252.452-73.704-60.158-38.372-111.138-89.772-149.432-150.296 38.292-60.524 89.274-111.924 149.434-150.296 3.918-2.5 7.876-4.922 11.86-7.3-9.96 27.328-15.41 56.822-15.41 87.596 0 141.382 114.616 256 256 256 141.382 0 256-114.618 256-256 0-30.774-5.452-60.268-15.408-87.598 3.978 2.378 7.938 4.802 11.858 7.302v0zM512 416c0 53.020-42.98 96-96 96s-96-42.98-96-96 42.98-96 96-96 96 42.982 96 96z"
                        ></path>
                      </svg>
                      <span class="Card-Text">4567</span>
                    </div>
                  </div>
                </div>
              </div>
              <div class="home-card2">
                <img
                  alt="image"
                  src="https://play.teleporthq.io/static/svg/default-img.svg"
                  class="home-image4"
                />
                <div class="home-content-container4">
                  <span class="home-text23 SmallCard-Heading">
                    This text is the name of the article. Lorem ipsum dolor sit
                    metsed ...
                  </span>
                  <span class="Anchor">Read more</span>
                </div>
                <div class="home-info-container3">
                  <div class="home-stats-container3">
                    <div class="home-messages-container3">
                      <svg viewBox="0 0 1024 1024" class="home-icon28">
                        <path
                          d="M938.667 490.539v-21.205c0-0.725-0.043-1.621-0.085-2.475-5.803-99.755-47.488-190.336-112.768-258.176-68.352-71.125-162.731-117.419-268.843-123.264-0.64-0.043-1.493-0.085-2.304-0.085h-20.864c-59.947-0.683-122.965 13.227-181.931 43.008-52.181 26.539-97.749 63.531-133.931 108.203-56.405 69.675-89.899 158.037-89.941 253.653-0.597 54.4 10.795 111.36 35.157 165.419l-75.605 226.859c-2.816 8.363-3.072 17.835 0 26.965 7.467 22.357 31.616 34.432 53.973 26.965l226.731-75.563c49.493 22.485 105.984 35.243 165.376 35.115 58.539-0.384 115.84-13.141 168.149-36.949 81.579-37.163 151.040-101.248 193.707-186.667 27.477-53.291 43.307-115.84 43.136-181.803zM853.333 490.795c0.128 52.267-12.459 101.333-33.664 142.464-34.176 68.352-88.832 118.784-153.259 148.139-41.387 18.859-86.869 28.971-133.376 29.312-52.096 0.128-101.163-12.459-142.293-33.664-10.624-5.504-22.528-6.059-33.067-2.56l-162.261 54.101 54.101-162.261c3.755-11.221 2.56-22.912-2.389-32.725-23.552-46.72-34.304-96.213-33.792-142.464 0.043-76.331 26.411-145.877 70.912-200.917 28.629-35.328 64.768-64.725 106.283-85.76 46.592-23.552 96.085-34.304 142.336-33.792h19.456c83.712 4.565 158.037 41.003 212.011 97.109 51.285 53.376 84.139 124.416 89.003 202.837z"
                        ></path>
                      </svg>
                      <span class="Card-Text">123</span>
                    </div>
                    <div class="home-views-container3">
                      <svg viewBox="0 0 1024 1024" class="home-icon30">
                        <path
                          d="M512 192c-223.318 0-416.882 130.042-512 320 95.118 189.958 288.682 320 512 320 223.312 0 416.876-130.042 512-320-95.116-189.958-288.688-320-512-320zM764.45 361.704c60.162 38.374 111.142 89.774 149.434 150.296-38.292 60.522-89.274 111.922-149.436 150.296-75.594 48.218-162.89 73.704-252.448 73.704-89.56 0-176.858-25.486-252.452-73.704-60.158-38.372-111.138-89.772-149.432-150.296 38.292-60.524 89.274-111.924 149.434-150.296 3.918-2.5 7.876-4.922 11.86-7.3-9.96 27.328-15.41 56.822-15.41 87.596 0 141.382 114.616 256 256 256 141.382 0 256-114.618 256-256 0-30.774-5.452-60.268-15.408-87.598 3.978 2.378 7.938 4.802 11.858 7.302v0zM512 416c0 53.020-42.98 96-96 96s-96-42.98-96-96 42.98-96 96-96 96 42.982 96 96z"
                        ></path>
                      </svg>
                      <span class="Card-Text">4567</span>
                    </div>
                  </div>
                </div>
              </div>
              <div class="home-card3">
                <img
                  alt="image"
                  src="https://play.teleporthq.io/static/svg/default-img.svg"
                  class="home-image5"
                />
                <div class="home-content-container5">
                  <span class="home-text26 SmallCard-Heading">
                    This text is the name of the article. Lorem ipsum dolor sit
                    metsed ...
                  </span>
                  <span class="Anchor">Read more</span>
                </div>
                <div class="home-info-container4">
                  <div class="home-stats-container4">
                    <div class="home-messages-container4">
                      <svg viewBox="0 0 1024 1024" class="home-icon32">
                        <path
                          d="M938.667 490.539v-21.205c0-0.725-0.043-1.621-0.085-2.475-5.803-99.755-47.488-190.336-112.768-258.176-68.352-71.125-162.731-117.419-268.843-123.264-0.64-0.043-1.493-0.085-2.304-0.085h-20.864c-59.947-0.683-122.965 13.227-181.931 43.008-52.181 26.539-97.749 63.531-133.931 108.203-56.405 69.675-89.899 158.037-89.941 253.653-0.597 54.4 10.795 111.36 35.157 165.419l-75.605 226.859c-2.816 8.363-3.072 17.835 0 26.965 7.467 22.357 31.616 34.432 53.973 26.965l226.731-75.563c49.493 22.485 105.984 35.243 165.376 35.115 58.539-0.384 115.84-13.141 168.149-36.949 81.579-37.163 151.040-101.248 193.707-186.667 27.477-53.291 43.307-115.84 43.136-181.803zM853.333 490.795c0.128 52.267-12.459 101.333-33.664 142.464-34.176 68.352-88.832 118.784-153.259 148.139-41.387 18.859-86.869 28.971-133.376 29.312-52.096 0.128-101.163-12.459-142.293-33.664-10.624-5.504-22.528-6.059-33.067-2.56l-162.261 54.101 54.101-162.261c3.755-11.221 2.56-22.912-2.389-32.725-23.552-46.72-34.304-96.213-33.792-142.464 0.043-76.331 26.411-145.877 70.912-200.917 28.629-35.328 64.768-64.725 106.283-85.76 46.592-23.552 96.085-34.304 142.336-33.792h19.456c83.712 4.565 158.037 41.003 212.011 97.109 51.285 53.376 84.139 124.416 89.003 202.837z"
                        ></path>
                      </svg>
                      <span class="Card-Text">123</span>
                    </div>
                    <div class="home-views-container4">
                      <svg viewBox="0 0 1024 1024" class="home-icon34">
                        <path
                          d="M512 192c-223.318 0-416.882 130.042-512 320 95.118 189.958 288.682 320 512 320 223.312 0 416.876-130.042 512-320-95.116-189.958-288.688-320-512-320zM764.45 361.704c60.162 38.374 111.142 89.774 149.434 150.296-38.292 60.522-89.274 111.922-149.436 150.296-75.594 48.218-162.89 73.704-252.448 73.704-89.56 0-176.858-25.486-252.452-73.704-60.158-38.372-111.138-89.772-149.432-150.296 38.292-60.524 89.274-111.924 149.434-150.296 3.918-2.5 7.876-4.922 11.86-7.3-9.96 27.328-15.41 56.822-15.41 87.596 0 141.382 114.616 256 256 256 141.382 0 256-114.618 256-256 0-30.774-5.452-60.268-15.408-87.598 3.978 2.378 7.938 4.802 11.858 7.302v0zM512 416c0 53.020-42.98 96-96 96s-96-42.98-96-96 42.98-96 96-96 96 42.982 96 96z"
                        ></path>
                      </svg>
                      <span class="Card-Text">4567</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <button type="button" class="home-button1 button">
            More Devices
          </button>
        </div>
HTMLCONTENT;

    }

//    public function getHtmlOutput()
//    {
//        $this->generateHTML(); // This will call createPageContent() and addJavaScriptFiles() to form the full page HTML
//        return $this->html_output;
//
//    }

    // No need for separate setPageTitle() since title can be set in the constructor or directly in createHeadSection() of WebPageTemplateView
}