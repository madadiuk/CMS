<?php
/**
 * IndexView.php
 *
 * Sessions: PHP web application to demonstrate how databases
 * are accessed securely
 *
 *
 * @author M Madadi
 * @copyright De Montfort University
 *
 * @package CryptoShow system CMS
 */

/**
 * Represents the view for the index page.
 */
class IndexView extends WebPageTemplateView
{
    /**
     * Constructs a new IndexView object.
     */
    public function __construct()
    {
        parent::__construct();
    }
    private $data = [];

    /**
     * Sets the data for the index page.
     *
     * @param array $data Data for the index page.
     */
    public function setData($data) {
        $this->data = $data;
    }
    /**
     * Orchestrates the creation of the index page.
     * It sets the page title, creates the web page layout, generates page content, and adds the footer.
     */
    public function createForm()
    {
        $this->setPageTitle();
        $this->createWebPage();
        $this->createPageContent();
        $this->createFooter();
    }
    /**
     * Retrieves the HTML output generated by the view.
     *
     * @return string HTML output generated by the view.
     */
    public function getHtmlOutput(): string
    {
        return $this->html_page_output;
    }
    /**
     * Sets the page title to 'CryptoShow System | Home'.
     */
    private function setPageTitle()
    {
        $this->page_title = 'CryptoShow System | Home';
    }
    /**
     * Creates the main content of the index page.
     */
    protected function createPageContent() {

        $this->html_page_content = <<<HTMLCONTENT
        <div id="resources" class="home-hero">
          <div class="home-content-container">
            <div class="home-hero-text">
              <h1 class="home-heading Section-Heading">Welcome to CryptoShow!</h1>
              <span class="home-text Section-Text">
                       Discover and showcase cryptographic devices at our diverse range of events. Explore upcoming events or host your own, and engage with a community passionate about cryptographic technology. Learn more about the fascinating devices available and how you can participate.
              </span>
            </div>
          </div>
        </div>
        <div id="events" class="home-events">
          <div class="home-heading-container">
            <h1 class="home-text01 Section-Heading">Events</h1>
            <span class="home-text02 Section-Text">
              We organize many events for you to bring your devices to. Here are the last three events we organized.
            </span>
          </div>
HTMLCONTENT;
// Dynamically create the section for the last three events
        $eventsSection = $this->generateEventsSection();

        // Insert the dynamically created events HTML into the main page content
        // Let's replace the static events section placeholder with dynamic content
        $this->html_page_content .= $eventsSection; // Append the dynamic events section
        $address = APP_ROOT_PATH;
        $usersSection = $this->generateUsersSection();
        $moreStaticContent = <<<HTMLCONTENT
     
       
          <a href="/events"><button name="route" value="list_all_events" class="home-button button"> More Events</button></a>
       
        
    
        </div>
        <div class="home-section-separator"></div>
HTMLCONTENT;
        $this->html_page_content  .= $moreStaticContent;
        $this->html_page_content .= $usersSection;
        $moreStaticContent = <<<HTMLCONTENT

        <div class="home-section-separator1"></div>
        <div id="devices" class="home-devices">
          <div class="home-heading-container2">
            <h1 class="home-text11 Section-Heading">Devices</h1>
            <span class="home-text12 Section-Text">
              The section of devices that you can see last four devices that were added to the system.
              and you can find out more about them.
            </span>
          </div>
          <div class="home-cards-container2">
            <div class="home-left-section">
              <div class="home-video-container">
<iframe class="home-video" width="560" height="315" src="https://www.youtube.com/embed/2hTRFB2itLA" style="border: 0;" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                
              </div>
              <div class="home-content-container1">
                <span class="home-heading1 Card-Heading">
                  What is Crypto Show?
                </span>
                <span class="home-text13 Card-Text">
                  The Crypto show is a platform that allows you to bring your devices to many events we organize. In this video we explain how it works.
                </span>
                <span class="home-text14 Card-Text">
                  Our application is designed to be user-friendly and easy to use. We have a wide range of devices that you can use to access our services.
                </span>
              </div>
            </div>
                <div class="home-right-section">
HTMLCONTENT;
        $this->html_page_content  .= $moreStaticContent;

                // Dynamically create the section for the last four devices
                $devicesSection = $this->generateDevicesSection();

                // Insert the dynamically created devices HTML into the main page content
                $this->html_page_content .= $devicesSection;


        $moreStaticContent = <<<HTMLCONTENT
        </div>
        </div>
        
                      <a class="home-button button" href="/devices"> More Devices  </a>
        </div>
HTMLCONTENT;
        $this->html_page_content  .= $moreStaticContent;
        $this->html_page_output .= $this->html_page_content;

    }
    /**
     * Generates the HTML code for displaying events.
     *
     * @return string HTML code for displaying events.
     */
    private function generateEventsSection(): string
    {
        $eventsHtml = "<div class='home-cards-container'>";
        if (!empty($this->data['events'])) {
            foreach ($this->data['events'] as $event) {
//                var_dump($event);
                $eventsHtml .= "<div class='home-event-card'>";
                $eventsHtml .= "<h3 class='home-text03 Card-Heading'>" . htmlspecialchars($event['event_name']) . "</h3>";
                $eventsHtml .= "<span class='home-text04 Card-Text'>" . htmlspecialchars($event['event_venue']) . "</span>";
                $eventsHtml .= "<span class='Card-Text'>" . htmlspecialchars($event['event_date']) . "</span>";
                $eventsHtml .= "<span class='Anchor'>Learn more</span>"; // Modify as needed
                $eventsHtml .= "</div>";
            }
        } else {
            $eventsHtml .= "<div class='home-event-card'>No events available at the moment.</div>";
        }
        $eventsHtml .= "</div>";
        return $eventsHtml;
    }
    /**
     * Generates the HTML code for displaying users.
     *
     * @return string HTML code for displaying users.
     */
    private function generateUsersSection(): string {
        $usersHtml = "<div class='home-users'>
                      <div class='home-heading-container1'>
                        <h1 class='home-text09 Section-Heading'>Last Users</h1>
                      </div>
                      <div class='home-cards-container1'>";

        foreach ($this->data['users'] as $user) {
            $usersHtml .= "<div class='home-user-card'>
                         <div class='home-avatar-container'>
                           <!-- User Image -->
                           <img src='https://madadi.uk/user.png' alt='image' class='home-image6' />
                         </div>
                         <span class='home-name Card-Heading'>" . htmlspecialchars($user['user_nickname']) . "</span>
                         <span class='home-position Card-Text'>" . htmlspecialchars($user['user_device_count']) . " Devices</span>
                       </div>";
        }

        $usersHtml .= "</div></div>";
        return $usersHtml;
    }
    /**
     * Generates the HTML code for displaying devices.
     *
     * @return string HTML code for displaying devices.
     */
    private function generateDevicesSection(): string {
        $devicesHtml = "";
        $media_path = APP_ROOT_PATH;
        foreach ($this->data['devices'] as $device) {
            $deviceName = htmlspecialchars($device['crypto_device_name']);
            $deviceImage = htmlspecialchars($device['crypto_device_image_name']);
            $deviceTimestamp = htmlspecialchars($device['crypto_device_registered_timestamp']);

            // Using the provided structure, adjusting for device details
            $devicesHtml .= <<<HTML
              <div class="home-card">
                <img
                  alt="Device Image"
                  src="{$media_path}media/{$deviceImage}" // Adjust the path as necessary
                  class="home-image2"
                />
                <div class="home-content-container2">
                  <span class="home-text17 SmallCard-Heading">{$deviceName}</span>
                  <span class="Anchor">Registered: {$deviceTimestamp}</span>
                </div>
                
              </div>
HTML;
        }

        return $devicesHtml;
    }


}