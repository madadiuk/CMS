<?php
/**
 * IndexView.php
 *
 * Sessions: PHP web application to demonstrate how databases
 * are accessed securely
 *
 *
 * @author M Madadi
 * @copyright De Montfort University
 *
 * @package CryptoShow system CMS
 */
/**
 * Represents the view for the user registration page.
 */
class RegisterView
{
    /**
     * @var string $page_title The title of the page
     * @var string $html_page_content The content of the page
     * @var string $html_page_output The final HTML output
     */
    protected $page_title;
    protected $html_page_content;
    protected $html_page_output;
    /**
     * Constructs a new RegisterView object.
     */
    public function __construct()
    {
        $this->page_title = '';
        $this->html_page_content = '';
        $this->html_page_output = '';
    }
    private $register = []; // Declare the property

    /**
     * Sets the registration data for the view.
     *
     * @param array $register Registration data.
     */
    public function setRegister($register) {
        $this->$register = $register; // Correct variable name
    }
    /**
     * Orchestrates the creation of the user registration page.
     * It creates the head section, generates page content, and constructs the final HTML output.
     */
    public function createRegisterPage()
    {
        $this->createHeadSection();

        $this->createPageContent();

    }
    /**
     * Retrieves the HTML output generated by the view.
     *
     * @return string HTML output generated by the view.
     */
    public function getHtmlOutput(): string
    {
        return $this->html_page_output;
    }
    /**
     * Creates the head section of the HTML page.
     */
    protected function createHeadSection() {
        $css_path = CSS_PATH;
        $css_filename = 'style.css'; // Assuming you have a main stylesheet named style.css
        $css_index = 'index.css'; // Assuming you have a main stylesheet named style.css
        $backgroundImageURL = "https://madadi.uk/cryptography.jpg";
        $html_output = <<<HTML
<!DOCTYPE html>
<html lang="en">
<head>
     <title>CryptoShow System | Register</title>
    <meta property="og:title" content="Main" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta charset="utf-8" />
    <meta property="twitter:card" content="summary_large_image" />
    <link rel="stylesheet" href="{$css_path}{$css_filename}" type="text/css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&amp;display=swap" />
    <link rel="stylesheet" href="{$css_path}{$css_index}" />
    <style>
        html { scroll-behavior: smooth; }
        /* Additional in-line CSS can be placed here */
    </style>
    <style data-tag="reset-style-sheet">
      html {  line-height: 1.15;}body {  margin: 0;}* {  box-sizing: border-box;  border-width: 0;  border-style: solid;}p,li,ul,pre,div,h1,h2,h3,h4,h5,h6,figure,blockquote,figcaption {  margin: 0;  padding: 0;}button {  background-color: transparent;}button,input,optgroup,select,textarea {  font-family: inherit;  font-size: 100%;  line-height: 1.15;  margin: 0;}button,select {  text-transform: none;}button,[type="button"],[type="reset"],[type="submit"] {  -webkit-appearance: button;}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner {  border-style: none;  padding: 0;}button:-moz-focus,[type="button"]:-moz-focus,[type="reset"]:-moz-focus,[type="submit"]:-moz-focus {  outline: 1px dotted ButtonText;}a {  color: inherit;  text-decoration: inherit;}input {  padding: 2px 4px;}img {  display: block;}html { scroll-behavior: smooth  }
    </style>
    <style data-tag="default-style-sheet">
      html {
        font-family: Raleway;
        font-size: 18px;
      }

       body {
            font-family: Raleway, sans-serif;
            font-size: 18px;
            font-weight: 400;
            line-height: 1.55;
            color: var(--dl-color-gray-black);
            background-color: var(--dl-color-gray-white);
            background-image: url('$backgroundImageURL');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }
        /* Responsive adjustments */
        @media (max-width: 768px) {
            body {
                /* Adjustments for smaller devices */
                /*background-position: center center;*/
            }
        }
        /* For devices narrower than 768px */
        @media (max-width: 768px) {
            body {
                /*background-size: cover;*/
            }
        }
    </style>
   
  </head>
  <body>
    <div>
      <div class="home-container">
HTML;

        $this->html_page_output .= $html_output ;
    }
    /**
     * Creates the main content of the registration page.
     */
    protected function createPageContent() {

        $this->html_page_content = <<<HTMLCONTENT
        <style>
        .error {
            color: #D8000C; /* Change the font color to red */
            background-color: #FFD2D2; /* Light red background */
            border: 1px solid #D8000C; /* Red border */
            margin: 20px 0; /* Add some margin above and below the error message */
            padding: 10px; /* Padding inside the error message box */
            border-radius: 5px; /* Rounded corners for the border */
            text-align: center; /* Center align the text */
            font-size: 16px; /* Larger font size for better readability */
            box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Optional: adds shadow for 3D effect */
        }
    </style>
                  
HTMLCONTENT;
// Dynamically create the section for the last three events
        $registerSection = $this->generateRegisterSection();

        // Insert the dynamically created events HTML into the main page content
        // Let's replace the static events section placeholder with dynamic content
        $this->html_page_content .= $registerSection; // Append the dynamic devices section


        $moreStaticContent = <<<HTMLCONTENT
            </div>
        </div>
        <div class="home-section-separator"></div>
HTMLCONTENT;
        $this->html_page_content  .= $moreStaticContent;
        $moreStaticContent = <<<HTMLCONTENT

HTMLCONTENT;
        $this->html_page_content  .= $moreStaticContent;

        $moreStaticContent = <<<HTMLCONTENT
        <div class="home-section-separator"></div>
HTMLCONTENT;
        $this->html_page_content  .= $moreStaticContent;
        $this->html_page_output .= $this->html_page_content;

    }
    /**
     * Generates the HTML code for displaying the registration section.
     *
     * @return string HTML code for displaying the registration section.
     */
    private function generateRegisterSection(): string
    {
        $errorMessages = $this->displayErrors(); // Capture error messages HTML
        return <<<HTML
    <div style="display: flex; justify-content: center; align-items: center; height: 100vh;">
        <div style="text-align: center; width: 100%; max-width: 400px;">
            <h1 style="margin-bottom: 2rem; background-color: rgba(255, 255, 255, 0.8); padding: 1rem; border-radius: 8px;">User Registration</h1>
                        {$errorMessages} <!-- Display error messages here -->
            <form action="/process_register" method="post" style="background: #f2f2f2; padding: 2rem; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                <div style="margin-bottom: 1rem;">
                    <label for="username" style="display: block; margin-bottom: .5rem;">Your full name:</label>
                    <input type="text" id="fullName" name="fullName" required style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                </div>
                <div style="margin-bottom: 1rem;">
                    <label for="username" style="display: block; margin-bottom: .5rem;">Username:</label>
                    <input type="text" id="username" name="username" required style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                </div>
                <div style="margin-bottom: 1rem;">
                    <label for="email" style="display: block; margin-bottom: .5rem;">Email:</label>
                    <input type="email" id="email" name="email" required style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                </div>
                <div style="margin-bottom: 1rem;">
                    <label for="password" style="display: block; margin-bottom: .5rem;">Password:</label>
                    <input type="password" id="password" name="password" required style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                </div>
                <button type="submit" style="background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer;">Register</button>
                <div style="margin-top: 1rem;">
                <a href="/login" style="background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 4px; display: inline-block;">Already Registered? Login</a>
            </div>
            </form>
        </div>
    </div>
HTML;
    }
    /**
     * Displays any registration errors stored in the session.
     *
     * @return string HTML code for displaying registration errors.
     */
    protected function displayErrors() {
        if (session_status() === PHP_SESSION_NONE) {
            session_start();
        }

        $errorsHtml = '';
        if (isset($_SESSION['registration_errors']) && !empty($_SESSION['registration_errors'])) {
            $errorsHtml = '<div class="error">';
            foreach ($_SESSION['registration_errors'] as $error) {
                $errorsHtml .= "<p>$error</p>";
            }
            $errorsHtml .= '</div>';
            unset($_SESSION['registration_errors']);
        }
        return $errorsHtml; // Return formatted errors or an empty string
    }

}

